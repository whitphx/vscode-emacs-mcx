// Refs:
// https://github.com/microsoft/vscode/blob/20724f79ba5142f9055a0a38a188fee3f15f79a4/src/vs/workbench/contrib/terminal/common/terminal.ts#L400
// https://github.com/microsoft/vscode/tree/20724f79ba5142f9055a0a38a188fee3f15f79a4/src/vs/workbench/contrib/terminalContrib
// and other files in the `src/vs/workbench/contrib/terminal` directory
[
  // Cursor movements: pass through or translate the sequences to the terminal.
  // These explicit definitions are necessary to override the default keybindings in VSCode that conflict with Emacs-like keybindings.
  {
    "key": "ctrl+f",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0006" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[C" },
    "when": "terminalFocus && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0002" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[D" },
    "when": "terminalFocus && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0010" },
    "when": "terminalFocus && terminalShellType != 'pwsh' && !terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[A" },
    "when": "terminalFocus && terminalShellType == 'pwsh' && !terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u000e" },
    "when": "terminalFocus && terminalShellType != 'pwsh' && !terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[B" },
    "when": "terminalFocus && terminalShellType == 'pwsh' && !terminalSuggestWidgetVisible"
  },
  {
    "key": "ctrl+a",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0001" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  {
    "key": "ctrl+a",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[H" },
    "when": "terminalFocus && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0005" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[F" },
    "when": "terminalFocus && terminalShellType == 'pwsh'"
  },
  {
    "key": "meta+f",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001bf" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  {
    "key": "meta+f",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[1;5C" },
    "when": "terminalFocus && terminalShellType == 'pwsh'"
  },
  {
    "key": "meta+b",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001bb" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  {
    "key": "meta+b",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u001b[1;5D" },
    "when": "terminalFocus && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u000b" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0004" },
    "when": "terminalFocus && terminalShellType != 'pwsh'"
  },
  // Find: https://github.com/whitphx/vscode-emacs-mcx/issues/1319
  {
    "keys": [
      "ctrl+s"
      // "ctrl+r" // We don't assign `ctrl+r` to the terminal find command because usually it is already used as a shortcut in terminals.
    ],
    "command": "workbench.action.terminal.focusFind",
    "inheritWhenFromDefault": true
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.terminal.findNext",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.terminal.findPrevious",
    "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindFocused"
  },
  // Suggestions
  // Ref: https://company-mode.github.io/manual/Getting-Started.html
  // Ref: https://code.visualstudio.com/docs/terminal/shell-integration#_intellisense-preview
  {
    "keys": ["ctrl+meta+i", "meta+tab"],
    "command": "workbench.action.terminal.requestCompletions",
    "inheritWhenFromDefault": true
  },
  {
    "keys": ["ctrl+p", "meta+p"],
    "command": "workbench.action.terminal.selectPrevSuggestion",
    "inheritWhenFromDefault": true
  },
  {
    "keys": ["ctrl+n", "meta+n"],
    "command": "workbench.action.terminal.selectNextSuggestion",
    "inheritWhenFromDefault": true
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.suggestToggleDetails",
    "inheritWhenFromDefault": true
  },
  // Clipboard
  {
    // Copied from the paste keybinding in the default keybindings.
    "key": "ctrl+y",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+w",
    "command": "workbench.action.terminal.copyAndClearSelection", // There is no `cutSelection`. We believe this is a good alternative.
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    // Copied from the copy keybinding in the default keybindings.
    "key": "meta+y",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "keys": ["ctrl+x 2", "ctrl+x 3"], // VSCode terminal only supports horizontal split.
    "command": "workbench.action.terminal.splitActiveTab",
    "when": "terminalFocus"
  },
  // Splitting
  {
    "key": "ctrl+x 0",
    "command": "workbench.action.terminal.unsplit",
    "when": "terminalFocus"
  }
]
