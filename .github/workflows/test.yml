name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2.1.7
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn --frozen-lockfile

    - name: ESLint & Prettier
      run: |
        yarn check:eslint
        yarn check:prettier

    - name: Test keybinding generator
      run: |
        yarn test-gen-keys
        yarn gen-keys
        git diff --quiet || (echo "You have to run 'yarn gen-keys' and commit the updated package.json" && exit -1)

    - name: Test
      run: xvfb-run -a yarn test
      if: runner.os == 'Linux'
    - name: Test
      run: yarn test
      if: runner.os != 'Linux'

    # Ref: https://github.com/redhat-developer/vscode-yaml/blob/89c53763249932454b766d09e7aa9035da7fb5b8/.github/workflows/CI.yaml#L48-L61
    - name: Test packaging on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        VERSION=$(node -p "require('./package.json').version")
        yarn run vsce package -o emacs-mcx-${VERSION}-${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}.vsix

    - name: Upload linux-built vsix
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: emacs-mcx
        path: emacs-mcx*.vsix
