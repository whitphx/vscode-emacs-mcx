{
	"name": "emacs-mcx",
	"displayName": "Awesome Emacs Keymap",
	"description": "Emacs Friendly Keymap with multi cursor support, improved mark-mode experience, clipboard and kill-ring integration, and lots of improvements and bug fixes.",
	"version": "0.19.9",
	"publisher": "tuttieee",
	"repository": {
		"type": "git",
		"url": "https://github.com/tuttieee/vscode-emacs-mcx"
	},
	"engines": {
		"vscode": "^1.46.0"
	},
	"categories": [
		"Other",
		"Keymaps"
	],
	"license": "MIT",
	"icon": "images/icon.png",
	"keywords": [
		"emacs",
		"keybindings",
		"multi cursor",
		"selection",
		"mark mode"
	],
	"activationEvents": [
		"*"
	],
	"extensionKind": [
		"ui"
	],
	"main": "./dist/lib/extension.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Awesome Emacs Keymap (emacs-mcx) configuration",
			"properties": {
				"emacs-mcx.killRingMax": {
					"type": "number",
					"default": 60,
					"description": "Maximum number of Kill ring entries"
				},
				"emacs-mcx.killWholeLine": {
					"type": "boolean",
					"default": false,
					"description": "Same to kill-whole-line variable in Emacs"
				},
				"emacs-mcx.strictEmacsMove": {
					"type": "boolean",
					"default": false,
					"description": "Simulate strictly the original emacs's cursor movements or preserve VSCode's native ones"
				},
				"emacs-mcx.useMetaPrefixEscape": {
					"type": "boolean",
					"default": false,
					"description": "If true, Escape key works as the Meta prefix."
				},
				"emacs-mcx.useMetaPrefixMacCmd": {
					"type": "boolean",
					"default": false,
					"description": "If true, Command (âŒ˜) key works as the Meta prefix (macOS only)."
				},
				"emacs-mcx.debug.silent": {
					"type": "boolean",
					"description": "If true, all logs are suppressed.",
					"default": false
				},
				"emacs-mcx.debug.loggingLevelForAlert": {
					"type": "string",
					"description": "Maximum level of messages to present as VS Code information window.",
					"default": "error",
					"enum": [
						"error",
						"warn",
						"info",
						"verbose",
						"debug",
						"silly"
					]
				},
				"emacs-mcx.debug.loggingLevelForConsole": {
					"type": "string",
					"description": "Maximum level of messages to log to console. Logs are visible in developer tools.",
					"default": "error",
					"enum": [
						"error",
						"warn",
						"info",
						"verbose",
						"debug",
						"silly"
					]
				}
			}
		},
		"keybindings": [
			{
				"key": "right",
				"command": "emacs-mcx.forwardChar",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+f",
				"command": "emacs-mcx.forwardChar",
				"when": "editorTextFocus"
			},
			{
				"key": "right",
				"command": "emacs-mcx.forwardChar",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+f",
				"command": "emacs-mcx.forwardChar",
				"when": "terminalFocus"
			},
			{
				"key": "right",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.forwardChar"
				]
			},
			{
				"key": "ctrl+f",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.forwardChar"
				]
			},
			{
				"key": "left",
				"command": "emacs-mcx.backwardChar",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+b",
				"command": "emacs-mcx.backwardChar",
				"when": "editorTextFocus"
			},
			{
				"key": "left",
				"command": "emacs-mcx.backwardChar",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+b",
				"command": "emacs-mcx.backwardChar",
				"when": "terminalFocus"
			},
			{
				"key": "left",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.backwardChar"
				]
			},
			{
				"key": "ctrl+b",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.backwardChar"
				]
			},
			{
				"key": "up",
				"command": "emacs-mcx.previousLine",
				"when": "editorTextFocus && !suggestWidgetVisible"
			},
			{
				"key": "ctrl+p",
				"command": "emacs-mcx.previousLine",
				"when": "editorTextFocus && !suggestWidgetVisible"
			},
			{
				"key": "up",
				"command": "emacs-mcx.previousLine",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+p",
				"command": "emacs-mcx.previousLine",
				"when": "terminalFocus"
			},
			{
				"key": "up",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.previousLine"
				]
			},
			{
				"key": "ctrl+p",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.previousLine"
				]
			},
			{
				"key": "down",
				"command": "emacs-mcx.nextLine",
				"when": "editorTextFocus && !suggestWidgetVisible"
			},
			{
				"key": "ctrl+n",
				"command": "emacs-mcx.nextLine",
				"when": "editorTextFocus && !suggestWidgetVisible"
			},
			{
				"key": "down",
				"command": "emacs-mcx.nextLine",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+n",
				"command": "emacs-mcx.nextLine",
				"when": "terminalFocus"
			},
			{
				"key": "down",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.nextLine"
				]
			},
			{
				"key": "ctrl+n",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardChar",
					"emacs-mcx.nextLine"
				]
			},
			{
				"key": "home",
				"command": "emacs-mcx.moveBeginningOfLine",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+a",
				"command": "emacs-mcx.moveBeginningOfLine",
				"when": "editorTextFocus"
			},
			{
				"key": "home",
				"command": "emacs-mcx.moveBeginningOfLine",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+a",
				"command": "emacs-mcx.moveBeginningOfLine",
				"when": "terminalFocus"
			},
			{
				"key": "home",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.moveBeginningOfLine"
				]
			},
			{
				"key": "ctrl+a",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.moveBeginningOfLine"
				]
			},
			{
				"key": "end",
				"command": "emacs-mcx.moveEndOfLine",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+e",
				"command": "emacs-mcx.moveEndOfLine",
				"when": "editorTextFocus"
			},
			{
				"key": "end",
				"command": "emacs-mcx.moveEndOfLine",
				"when": "terminalFocus"
			},
			{
				"key": "ctrl+e",
				"command": "emacs-mcx.moveEndOfLine",
				"when": "terminalFocus"
			},
			{
				"key": "end",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.moveEndOfLine"
				]
			},
			{
				"key": "ctrl+e",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.moveEndOfLine"
				]
			},
			{
				"key": "alt+f",
				"command": "emacs-mcx.forwardWord",
				"when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+f",
				"mac": "cmd+f",
				"command": "emacs-mcx.forwardWord",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape f",
				"command": "emacs-mcx.forwardWord",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+f",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardWord"
				]
			},
			{
				"key": "alt+f",
				"mac": "cmd+f",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardWord"
				]
			},
			{
				"key": "escape f",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape",
				"args": [
					"closeFindWidget",
					"emacs-mcx.forwardWord"
				]
			},
			{
				"key": "alt+b",
				"command": "emacs-mcx.backwardWord",
				"when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+b",
				"mac": "cmd+b",
				"command": "emacs-mcx.backwardWord",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape b",
				"command": "emacs-mcx.backwardWord",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+b",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.backwardWord"
				]
			},
			{
				"key": "alt+b",
				"mac": "cmd+b",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.backwardWord"
				]
			},
			{
				"key": "escape b",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape",
				"args": [
					"closeFindWidget",
					"emacs-mcx.backwardWord"
				]
			},
			{
				"key": "pagedown",
				"command": "emacs-mcx.scrollUpCommand",
				"when": "editorTextFocus && !suggestWidgetVisible"
			},
			{
				"key": "ctrl+v",
				"command": "emacs-mcx.scrollUpCommand",
				"when": "editorTextFocus && !suggestWidgetVisible"
			},
			{
				"key": "pagedown",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "ctrl+v",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "pageup",
				"command": "emacs-mcx.scrollDownCommand",
				"when": "editorTextFocus && !suggestWidgetVisible"
			},
			{
				"key": "alt+v",
				"command": "emacs-mcx.scrollDownCommand",
				"when": "editorTextFocus && !suggestWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+v",
				"mac": "cmd+v",
				"command": "emacs-mcx.scrollDownCommand",
				"when": "editorTextFocus && !suggestWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape v",
				"command": "emacs-mcx.scrollDownCommand",
				"when": "editorTextFocus && !suggestWidgetVisible && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "pageup",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "alt+v",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+v",
				"mac": "cmd+v",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape v",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+shift+[",
				"command": "emacs-mcx.backwardParagraph",
				"when": "editorTextFocus && !suggestWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+shift+[",
				"mac": "cmd+shift+[",
				"command": "emacs-mcx.backwardParagraph",
				"when": "editorTextFocus && !suggestWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape shift+[",
				"command": "emacs-mcx.backwardParagraph",
				"when": "editorTextFocus && !suggestWidgetVisible && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+shift+]",
				"command": "emacs-mcx.forwardParagraph",
				"when": "editorTextFocus && !suggestWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+shift+]",
				"mac": "cmd+shift+]",
				"command": "emacs-mcx.forwardParagraph",
				"when": "editorTextFocus && !suggestWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape shift+]",
				"command": "emacs-mcx.forwardParagraph",
				"when": "editorTextFocus && !suggestWidgetVisible && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+shift+.",
				"command": "emacs-mcx.endOfBuffer",
				"when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+shift+.",
				"mac": "cmd+shift+.",
				"command": "emacs-mcx.endOfBuffer",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape shift+.",
				"command": "emacs-mcx.endOfBuffer",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+shift+.",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.endOfBuffer"
				]
			},
			{
				"key": "alt+shift+.",
				"mac": "cmd+shift+.",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.endOfBuffer"
				]
			},
			{
				"key": "escape shift+.",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape",
				"args": [
					"closeFindWidget",
					"emacs-mcx.endOfBuffer"
				]
			},
			{
				"key": "alt+shift+,",
				"command": "emacs-mcx.beginningOfBuffer",
				"when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+shift+,",
				"mac": "cmd+shift+,",
				"command": "emacs-mcx.beginningOfBuffer",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape shift+,",
				"command": "emacs-mcx.beginningOfBuffer",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+shift+,",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.beginningOfBuffer"
				]
			},
			{
				"key": "alt+shift+,",
				"mac": "cmd+shift+,",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.beginningOfBuffer"
				]
			},
			{
				"key": "escape shift+,",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape",
				"args": [
					"closeFindWidget",
					"emacs-mcx.beginningOfBuffer"
				]
			},
			{
				"key": "alt+g alt+g",
				"command": "workbench.action.gotoLine",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g alt+g",
				"mac": "cmd+g cmd+g",
				"command": "workbench.action.gotoLine",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g g",
				"command": "workbench.action.gotoLine",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g g",
				"mac": "cmd+g g",
				"command": "workbench.action.gotoLine",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g alt+g",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"workbench.action.gotoLine"
				]
			},
			{
				"key": "alt+g alt+g",
				"mac": "cmd+g cmd+g",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"workbench.action.gotoLine"
				]
			},
			{
				"key": "alt+g g",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"workbench.action.gotoLine"
				]
			},
			{
				"key": "alt+g g",
				"mac": "cmd+g g",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"workbench.action.gotoLine"
				]
			},
			{
				"key": "escape g",
				"command": "workbench.action.gotoLine",
				"when": "config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+g n",
				"command": "editor.action.marker.next",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g n",
				"mac": "cmd+g n",
				"command": "editor.action.marker.next",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g alt+n",
				"command": "editor.action.marker.next",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g alt+n",
				"mac": "cmd+g cmd+n",
				"command": "editor.action.marker.next",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "ctrl+x `",
				"command": "editor.action.marker.next"
			},
			{
				"key": "alt+g p",
				"command": "editor.action.marker.prev",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g p",
				"mac": "cmd+g p",
				"command": "editor.action.marker.prev",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g alt+p",
				"command": "editor.action.marker.prev",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+g alt+p",
				"mac": "cmd+g cmd+p",
				"command": "editor.action.marker.prev",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "ctrl+l",
				"command": "emacs-mcx.recenterTopBottom",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+s",
				"command": "emacs-mcx.isearchForward",
				"when": "!findWidgetVisible"
			},
			{
				"key": "ctrl+s",
				"command": "editor.action.nextMatchFindAction",
				"when": "findWidgetVisible"
			},
			{
				"key": "ctrl+r",
				"command": "emacs-mcx.isearchBackward",
				"when": "!findWidgetVisible"
			},
			{
				"key": "ctrl+r",
				"command": "editor.action.previousMatchFindAction",
				"when": "findWidgetVisible"
			},
			{
				"key": "alt+shift+5",
				"command": "editor.action.startFindReplaceAction",
				"when": "editorFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+shift+5",
				"mac": "cmd+shift+5",
				"command": "editor.action.startFindReplaceAction",
				"when": "editorFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape shift+5",
				"command": "editor.action.startFindReplaceAction",
				"when": "editorFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+alt+n",
				"command": "emacs-mcx.addSelectionToNextFindMatch",
				"when": "editorFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "ctrl+alt+n",
				"mac": "ctrl+cmd+n",
				"command": "emacs-mcx.addSelectionToNextFindMatch",
				"when": "editorFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape ctrl+n",
				"command": "emacs-mcx.addSelectionToNextFindMatch",
				"when": "editorFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+alt+p",
				"command": "emacs-mcx.addSelectionToPreviousFindMatch",
				"when": "editorFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "ctrl+alt+p",
				"mac": "ctrl+cmd+p",
				"command": "emacs-mcx.addSelectionToPreviousFindMatch",
				"when": "editorFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape ctrl+p",
				"command": "emacs-mcx.addSelectionToPreviousFindMatch",
				"when": "editorFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+d",
				"command": "emacs-mcx.deleteForwardChar",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "backspace",
				"command": "emacs-mcx.deleteBackwardChar",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+h",
				"command": "emacs-mcx.deleteBackwardChar",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "alt+d",
				"command": "emacs-mcx.killWord",
				"when": "editorTextFocus && !editorReadonly && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+d",
				"mac": "cmd+d",
				"command": "emacs-mcx.killWord",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape d",
				"command": "emacs-mcx.killWord",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+backspace",
				"command": "emacs-mcx.backwardKillWord",
				"when": "editorTextFocus && !editorReadonly && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+backspace",
				"mac": "cmd+backspace",
				"command": "emacs-mcx.backwardKillWord",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape backspace",
				"command": "emacs-mcx.backwardKillWord",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+k",
				"command": "emacs-mcx.killLine",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+shift+backspace",
				"command": "emacs-mcx.killWholeLine",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+w",
				"command": "emacs-mcx.killRegion",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+w",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "alt+w",
				"command": "emacs-mcx.copyRegion",
				"when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+w",
				"mac": "cmd+w",
				"command": "emacs-mcx.copyRegion",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape w",
				"command": "emacs-mcx.copyRegion",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+w",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.copyRegion"
				]
			},
			{
				"key": "alt+w",
				"mac": "cmd+w",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"emacs-mcx.copyRegion"
				]
			},
			{
				"key": "escape w",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape",
				"args": [
					"closeFindWidget",
					"emacs-mcx.copyRegion"
				]
			},
			{
				"key": "ctrl+y",
				"command": "emacs-mcx.yank",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+y",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "alt+y",
				"command": "emacs-mcx.yank-pop",
				"when": "editorTextFocus && !editorReadonly && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+y",
				"mac": "cmd+y",
				"command": "emacs-mcx.yank-pop",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape y",
				"command": "emacs-mcx.yank-pop",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+y",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+y",
				"mac": "cmd+y",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape y",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+o",
				"command": "lineBreakInsert",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+o",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "ctrl+m",
				"command": "emacs-mcx.newLine",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+m",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "ctrl+j",
				"command": "emacs-mcx.newLine",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+j",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "ctrl+x ctrl+o",
				"command": "emacs-mcx.deleteBlankLines",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+x ctrl+o",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"emacs-mcx.deleteBlankLines"
				]
			},
			{
				"key": "ctrl+x h",
				"command": "editor.action.selectAll",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x h",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"editor.action.selectAll"
				]
			},
			{
				"key": "ctrl+x u",
				"command": "undo",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+x u",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"undo"
				]
			},
			{
				"key": "ctrl+/",
				"command": "undo",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+/",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"undo"
				]
			},
			{
				"key": "ctrl+;",
				"command": "editor.action.commentLine",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "ctrl+;",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible",
				"args": [
					"closeFindWidget",
					"editor.action.commentLine"
				]
			},
			{
				"key": "alt+;",
				"command": "editor.action.blockComment",
				"when": "editorTextFocus && !editorReadonly && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+;",
				"mac": "cmd+;",
				"command": "editor.action.blockComment",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape ;",
				"command": "editor.action.blockComment",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+;",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"editor.action.blockComment"
				]
			},
			{
				"key": "alt+;",
				"mac": "cmd+;",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"closeFindWidget",
					"editor.action.blockComment"
				]
			},
			{
				"key": "escape ;",
				"command": "emacs-mcx.executeCommands",
				"when": "editorFocus && findWidgetVisible && config.emacs-mcx.useMetaPrefixEscape",
				"args": [
					"closeFindWidget",
					"editor.action.blockComment"
				]
			},
			{
				"key": "ctrl+x ctrl+l",
				"command": "emacs-mcx.transformToLowercase",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "alt+l",
				"command": "emacs-mcx.transformToLowercase",
				"when": "editorTextFocus && !editorReadonly && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+l",
				"mac": "cmd+l",
				"command": "emacs-mcx.transformToLowercase",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape l",
				"command": "emacs-mcx.transformToLowercase",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+x ctrl+u",
				"command": "emacs-mcx.transformToUppercase",
				"when": "editorTextFocus && !editorReadonly"
			},
			{
				"key": "alt+u",
				"command": "emacs-mcx.transformToUppercase",
				"when": "editorTextFocus && !editorReadonly && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+u",
				"mac": "cmd+u",
				"command": "emacs-mcx.transformToUppercase",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape u",
				"command": "emacs-mcx.transformToUppercase",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+c",
				"command": "emacs-mcx.transformToTitlecase",
				"when": "editorTextFocus && !editorReadonly && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+c",
				"mac": "cmd+c",
				"command": "emacs-mcx.transformToTitlecase",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape c",
				"command": "emacs-mcx.transformToTitlecase",
				"when": "editorTextFocus && !editorReadonly && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "alt+shift+6",
				"command": "emacs-mcx.executeCommands",
				"when": "editorTextFocus && !editorReadOnly && !config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"emacs-mcx.previousLine",
					"editor.action.joinLines"
				]
			},
			{
				"key": "alt+shift+6",
				"mac": "cmd+shift+6",
				"command": "emacs-mcx.executeCommands",
				"when": "editorTextFocus && !editorReadOnly && config.emacs-mcx.useMetaPrefixMacCmd",
				"args": [
					"emacs-mcx.previousLine",
					"editor.action.joinLines"
				]
			},
			{
				"key": "escape shift+6",
				"command": "emacs-mcx.executeCommands",
				"when": "editorTextFocus && !editorReadOnly && config.emacs-mcx.useMetaPrefixEscape",
				"args": [
					"emacs-mcx.previousLine",
					"editor.action.joinLines"
				]
			},
			{
				"key": "escape",
				"command": "emacs-mcx.cancel",
				"when": "editorTextFocus && editorHasSelection && !config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "escape",
				"command": "emacs-mcx.cancel",
				"when": "editorTextFocus && editorHasMultipleSelections && !config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+g",
				"command": "emacs-mcx.cancel",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+g",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "enter",
				"command": "closeFindWidget",
				"when": "editorFocus && findWidgetVisible"
			},
			{
				"key": "ctrl+g",
				"command": "closeReferenceSearchEditor",
				"when": "inReferenceSearchEditor && !config.editor.stablePeek"
			},
			{
				"key": "ctrl+g",
				"command": "closeReferenceSearch",
				"when": "referenceSearchVisible && !config.editor.stablePeek"
			},
			{
				"key": "ctrl+g",
				"command": "closeBreakpointWidget",
				"when": "breakpointWidgetVisible && editorFocus"
			},
			{
				"key": "ctrl+g",
				"command": "leaveSnippet",
				"when": "editorTextFocus && inSnippetMode"
			},
			{
				"key": "ctrl+g",
				"command": "closeMarkersNavigation",
				"when": "editorFocus && markersNavigationVisible"
			},
			{
				"key": "ctrl+g",
				"command": "closeParameterHints",
				"when": "editorTextFocus && parameterHintsVisible"
			},
			{
				"key": "ctrl+g",
				"command": "hideSuggestWidget",
				"when": "editorTextFocus && suggestWidgetVisible"
			},
			{
				"key": "ctrl+g",
				"command": "cancelRenameInput",
				"when": "editorFocus && renameInputVisible"
			},
			{
				"key": "ctrl+g",
				"command": "closeAccessibilityHelp",
				"when": "accessibilityHelpWidgetVisible && editorFocus"
			},
			{
				"key": "ctrl+g",
				"command": "closeReplaceInFilesWidget",
				"when": "replaceInputBoxFocus && searchViewletVisible"
			},
			{
				"key": "ctrl+g",
				"command": "workbench.action.closeMessages",
				"when": "globalMessageVisible"
			},
			{
				"key": "ctrl+g",
				"command": "workbench.action.closeQuickOpen",
				"when": "inQuickOpen"
			},
			{
				"key": "ctrl+space",
				"command": "emacs-mcx.setMarkCommand",
				"when": "editorTextFocus"
			},
			{
				"key": "escape space",
				"command": "emacs-mcx.setMarkCommand",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+'",
				"command": "editor.action.triggerSuggest",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+'",
				"command": "toggleSuggestionDetails",
				"when": "editorTextFocus && suggestWidgetVisible"
			},
			{
				"key": "alt+x",
				"command": "workbench.action.showCommands",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "alt+x",
				"mac": "cmd+x",
				"command": "workbench.action.showCommands",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape x",
				"command": "workbench.action.showCommands",
				"when": "config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+alt+space",
				"command": "workbench.action.toggleSidebarVisibility",
				"when": "!config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "ctrl+alt+space",
				"mac": "ctrl+cmd+space",
				"command": "workbench.action.toggleSidebarVisibility",
				"when": "config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape ctrl+space",
				"command": "workbench.action.toggleSidebarVisibility",
				"when": "config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+x z",
				"command": "workbench.action.toggleZenMode"
			},
			{
				"key": "ctrl+x ctrl+f",
				"command": "workbench.action.quickOpen"
			},
			{
				"key": "ctrl+x ctrl+s",
				"command": "workbench.action.files.save",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x ctrl+w",
				"command": "workbench.action.files.saveAs",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x ctrl+n",
				"command": "workbench.action.newWindow"
			},
			{
				"key": "ctrl+x b",
				"command": "workbench.action.showAllEditorsByMostRecentlyUsed"
			},
			{
				"key": "ctrl+x k",
				"command": "workbench.action.closeActiveEditor"
			},
			{
				"key": "ctrl+x ctrl-k",
				"command": "workbench.action.closeAllEditors"
			},
			{
				"key": "ctrl+x 0",
				"command": "workbench.action.closeEditorsInGroup"
			},
			{
				"key": "ctrl+x 1",
				"command": "workbench.action.closeEditorsInOtherGroups"
			},
			{
				"key": "ctrl+x 2",
				"command": "workbench.action.splitEditorDown"
			},
			{
				"key": "ctrl+x 3",
				"command": "workbench.action.splitEditorRight"
			},
			{
				"key": "ctrl+x 4",
				"command": "workbench.action.toggleEditorGroupLayout"
			},
			{
				"key": "ctrl+x o",
				"command": "workbench.action.navigateEditorGroups"
			},
			{
				"key": "ctrl+u",
				"command": "emacs-mcx.universalArgument",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+alt+f",
				"command": "emacs-mcx.paredit.forwardSexp",
				"when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "ctrl+alt+f",
				"mac": "ctrl+cmd+f",
				"command": "emacs-mcx.paredit.forwardSexp",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape ctrl+f",
				"command": "emacs-mcx.paredit.forwardSexp",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+alt+b",
				"command": "emacs-mcx.paredit.backwardSexp",
				"when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "ctrl+alt+b",
				"mac": "ctrl+cmd+b",
				"command": "emacs-mcx.paredit.backwardSexp",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixMacCmd"
			},
			{
				"key": "escape ctrl+b",
				"command": "emacs-mcx.paredit.backwardSexp",
				"when": "editorTextFocus && config.emacs-mcx.useMetaPrefixEscape"
			},
			{
				"key": "ctrl+p",
				"command": "showPrevParameterHint",
				"when": "editorTextFocus && parameterHintsVisible"
			},
			{
				"key": "ctrl+n",
				"command": "showNextParameterHint",
				"when": "editorTextFocus && parameterHintsVisible"
			},
			{
				"key": "ctrl+p",
				"command": "selectPrevQuickFix",
				"when": "editorFocus && quickFixWidgetVisible"
			},
			{
				"key": "ctrl+n",
				"command": "selectNextQuickFix",
				"when": "editorFocus && quickFixWidgetVisible"
			},
			{
				"key": "ctrl+p",
				"command": "selectPrevSuggestion",
				"when": "editorTextFocus && suggestWidgetVisible"
			},
			{
				"key": "ctrl+n",
				"command": "selectNextSuggestion",
				"when": "editorTextFocus && suggestWidgetVisible"
			},
			{
				"key": "ctrl+p",
				"command": "workbench.action.quickOpenNavigatePrevious",
				"when": "inQuickOpen"
			},
			{
				"key": "ctrl+n",
				"command": "workbench.action.quickOpenNavigateNext",
				"when": "inQuickOpen"
			},
			{
				"key": "ctrl+shift+'",
				"command": "editor.action.triggerParameterHints",
				"when": "editorTextFocus"
			},
			{
				"key": "ctrl+x j",
				"command": "workbench.action.togglePanel"
			},
			{
				"key": "ctrl+i",
				"command": "emacs-mcx.executeCommands",
				"args": [
					"emacs-mcx.forwardChar",
					"emacs-mcx.nextLine"
				]
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "yarn && yarn gen-keys && yarn webpack:prod",
		"webpack:dev": "webpack --mode development && yarn post-webpack",
		"webpack:prod": "webpack --mode production && yarn post-webpack",
		"webpack": "yarn webpack:dev",
		"post-webpack": "cp -rp node_modules/clipboardy/fallbacks dist/.",
		"test-compile": "tsc -p ./",
		"gen-keys": "ts-node ./keybinding-generator/cli.ts",
		"prettier": "prettier --write 'src/**/*.ts'",
		"lint": "eslint src --ext ts",
		"pretest": "yarn run test-compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/expect": "^24.3.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^7.0.2",
		"@types/node": "^14.0.19",
		"@types/vscode": "^1.46.0",
		"@typescript-eslint/eslint-plugin": "^2.34.0",
		"@typescript-eslint/parser": "^2.34.0",
		"eslint": "^6.8.0",
		"eslint-config-prettier": "^6.11.0",
		"eslint-plugin-prettier": "^3.1.4",
		"expect": "^26.1.0",
		"glob": "^7.1.6",
		"mocha": "^7.2.0",
		"prettier": "^2.0.5",
		"strip-json-comments": "^3.1.0",
		"ts-loader": "^7.0.5",
		"ts-mocha": "^7.0.0",
		"ts-node": "^8.10.2",
		"typescript": "^3.9.6",
		"vscode-test": "^1.4.0",
		"webpack": "^4.43.0",
		"webpack-cli": "^3.3.12"
	},
	"dependencies": {
		"clipboardy": "^2.3.0",
		"paredit.js": "^0.3.4",
		"winston": "^3.3.3",
		"winston-console-for-electron": "^0.0.6"
	}
}
